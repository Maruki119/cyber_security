generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String     @id @default(uuid())
  username              String     @unique
  email                 String     @unique
  password_hash         String
  failed_login_count    Int        @default(0)
  is_locked             Boolean    @default(false)
  lock_expires_at       DateTime?
  password_last_changed DateTime   @default(now())
  created_at            DateTime   @default(now())
  logs                  AuditLog[]
  roles                 UserRole[]
}

model Role {
  id    Int        @id @default(autoincrement())
  name  String     @unique
  users UserRole[]
}

model UserRole {
  userId String
  roleId Int
  role   Role   @relation(fields: [roleId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@id([userId, roleId])
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  userId    String?
  action    String
  details   Json?
  success   Boolean
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])
}

model passwordResetOTP {
  id         Int       @id(map: "password_reset_otp_pkey") @default(autoincrement())
  email      String    @db.VarChar(100)
  otp        String    @db.VarChar(10)
  expires_at DateTime  @db.Timestamp(6)
  created_at DateTime? @default(now()) @db.Timestamp(6)
}
